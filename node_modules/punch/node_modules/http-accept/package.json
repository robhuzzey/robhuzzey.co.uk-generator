{
  "name": "http-accept",
  "version": "0.1.1-3",
  "description": "Connect compatible middleware that parses HTTP Accept header fields",
  "author": {
    "name": "Niclas Hoyer",
    "url": "https://github.com/niclashoyer"
  },
  "contributors": [
    {
      "name": "Ben Blank",
      "email": "ben.blank@gmail.com",
      "url": "https://github.com/benblank"
    },
    {
      "name": "Fiona Schmidtke",
      "url": "https://github.com/fisch42"
    }
  ],
  "files": [
    "lib/"
  ],
  "main": "lib/Accept.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/niclashoyer/http-accept.git"
  },
  "licence": "MIT",
  "readme": "# Accept\n\nAccept parses all accept header fields and sorts them according to the HTTP\nspecification.\n\n## Supported Header Fields\n\n### Accept\nParsed into `req.accept.types`.\n\n### Accept-Charset\nParsed into `req.accept.charsets`.\n\n### Accept-Encoding\nParsed into `req.accept.encodings`.\n\n### Accept-Language\nParsed into `req.accept.languages`.\n\n### Accept-Ranges\nParsed into `req.accept.ranges`.\n\n## Installation\n\n```bash\nnpm install http-accept\n```\n\n## Usage\n\nJust `require 'http-accept'` and throw it into a connect compatible middlware\nstack.\n\n```coffeescript\nconnect  = require 'connect'\nhttp     = require 'http'\naccept   = require 'http-accept'\n\napp = connect()\napp.use connect.logger 'dev'\napp.use accept\napp.use (req, res) ->\n\tconsole.log req.accept\n\tres.end()\n\napp.listen 3000\n```\n\nA request from a browser on `http://localhost:3000` would print out\n\n```javascript\n{ types: \n   [ { type: 'text',\n       subtype: 'html',\n       params: {},\n       mediarange: 'text/html',\n       quality: 1 },\n     { type: 'application',\n       subtype: 'xhtml+xml',\n       params: {},\n       mediarange: 'application/xhtml+xml',\n       quality: 1 },\n     { type: 'application',\n       subtype: 'xml',\n       params: [Object],\n       mediarange: 'application/xml',\n       quality: 0.9 },\n     { type: '*',\n       subtype: '*',\n       params: [Object],\n       mediarange: '*/*',\n       quality: 0.8 } ],\n  charsets: undefined,\n  encodings: [ 'gzip', 'deflate' ],\n  languages: [ 'de-de', 'de', 'en-us', 'en' ],\n  ranges: undefined }\n```\n\nFor each header present in the request, there is also a `getBestMatch` method which will find the highest quality match amongst the supplied candidates.\n\n```coffeescript\nencoding = (req.accept.encodings?.getBestMatch [\"gzip\", \"deflate\"]) ? \"identity\"\nmediaType = req.accept.types?.getBestMatch [\"text/html\", \"application/json\" ,\"application/xml\"]\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/niclashoyer/http-accept/issues"
  },
  "_id": "http-accept@0.1.1-3",
  "_from": "http-accept@>= 0.1.1-3"
}
